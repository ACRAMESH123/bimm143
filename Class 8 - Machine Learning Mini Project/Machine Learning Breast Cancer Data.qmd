---
title: "Class 8: PCA Mini Project"
author: "Achyuta (PID: A16956100)"
format: pdf
---

```{r}
colMeans(mtcars)
```

```{r}
apply(mtcars, 2, sd)
```

```{r}
x <- scale(mtcars)
head(x)
```

```{r}
round(colMeans(x),2)
```

```{r}
fna.data <- "WisconsinCancer.csv"
wisc.df <- read.csv(fna.data, row.names=1)

```

```{r}
wisc.data <- wisc.df[,-1]

```

Remove "diagnosis" column - it is expert data to compare analysis results to.

```{r}
diagnosis <- wisc.df[, 1]
table(diagnosis)
```

```{r}
nrow(wisc.data)
dim(wisc.data)
cols_means <- grep("_mean", colnames(wisc.data), value = T)
length(cols_means)
```
> Q1. How many observations are in this dataset?
569
> Q2. How many of the observations have a malignant diagnosis?
212
> Q3. How many variables/features in the data are suffixed with _mean?
10

```{r}
colMeans(wisc.data)
"________"
apply(wisc.data, 2, sd)
```


```{r}
wisc.pr <- prcomp(wisc.data, scale = TRUE)
summary(wisc.pr)
```

> Q4. From your results, what proportion of the original variance is captured by the first principal components (PC1)?
44.27%
> Q5. How many principal components (PCs) are required to describe at least 70% of the original variance in the data?
3
> Q6. How many principal components (PCs) are required to describe at least 90% of the original variance in the data?
7

```{r}
biplot(wisc.pr)
```
> Q7. What stands out to you about this plot? Is it easy or difficult to understand? Why? 
This plot is very difficult to understand, as all of the data and words on it makes it so that nothing can really be discerned from it.

```{r}
plot(wisc.pr$x[,1:2], col = as.factor(diagnosis),
     xlab = "PC1", ylab = "PC2")
```


```{r}
plot(wisc.pr$x[,1:3], col = as.factor(diagnosis), 
     xlab = "PC1", ylab = "PC3")
```
> Q8. Generate a similar plot for principal components 1 and 3. What do you notice about these plots?
The plots are very similar but the distinction between the two categories is more blurry than the graph between principal components 1 and 2.

```{r}
df <- as.data.frame(wisc.pr$x)
df$diagnosis <- diagnosis

# Load the ggplot2 package
library(ggplot2)

# Make a scatter plot colored by diagnosis
ggplot(df) + 
  aes(PC1, PC2, col= diagnosis) + 
  geom_point()
```

```{r}
pr.var <- wisc.pr$sdev^2
head(pr.var)
var_tot <- sum(pr.var)
```

```{r}
# Variance explained by each principal component: pve
pve <- pr.var / var_tot

# Plot variance explained for each principal component
plot(pve, xlab = "Principal Component", 
     ylab = "Proportion of Variance Explained", 
     ylim = c(0, 1), type = "o")
```

```{r}
# Alternative scree plot of the same data, note data driven y-axis
barplot(pve, ylab = "Precent of Variance Explained",
     names.arg=paste0("PC",1:length(pve)), las=2, axes = FALSE)
axis(2, at=pve, labels=round(pve,2)*100 )
```

```{r}
## ggplot based graph
library(factoextra)
fviz_eig(wisc.pr, addlabels = TRUE)
```
```{r}
y <- wisc.pr$rotation[,1]
y / sum(y)
sum(y)
y
summary(y)
```

> Q9. For the first principal component, what is the component of the loading vector (i.e. wisc.pr$rotation[,1]) for the feature concave.points_mean?
-0.26 out of the -5.04 variance is contributed by concave.points_mean, which is about 5.2%

> Q10. What is the minimum number of principal components required to explain 80% of the variance of the data?
5


```{r}
data.scaled <- scale(wisc.data)
data.dist <- dist(data.scaled)
wisc.hclust <- hclust(data.dist, method = "ward.D2")
plot(wisc.hclust)
abline(h = 32, col="red", lty=2)
```
> Q11. Using the plot() and abline() functions, what is the height at which the clustering model has 4 clusters?
32


```{r}

wisc.hclust.clusters <- cutree(wisc.hclust, k = 4)
table(wisc.hclust.clusters, diagnosis)


```
> Q12. Can you find a better cluster vs diagnoses match by cutting into a different number of clusters between 2 and 10?
No, 4 groups yielded the best cluster vs diagnoses match.

> Q13. Which method gives your favorite results for the same data.dist dataset? Explain your reasoning.
My favorite results are given using the `complete` method, as it allows for the groups to be the most distinct, allowing for me to easily identify each group.

```{r}
wisc.hclust <- hclust(data.dist, method = "single")
plot(wisc.hclust)
wisc.hclust <- hclust(data.dist, method = "complete")
plot(wisc.hclust)
wisc.hclust <- hclust(data.dist, method = "average")
plot(wisc.hclust)
wisc.hclust <- hclust(data.dist, method = "ward.D2")
plot(wisc.hclust)
```

```{r}
wisc.pr.hclust <- hclust(data.dist, method = "ward.D2")
grps <- cutree(wisc.pr.hclust, k=2)
table(grps)
table(grps, diagnosis)
```

```{r}
plot(wisc.pr$x[,1:2], col = grps)
```

```{r}
g <- as.factor(grps)
levels(g)
```

```{r}
g <- relevel(g,2)
levels(g)
```

```{r}
plot(wisc.pr$x[,1:2], col=g)
```

```{r}
wisc.pr.hclust <- hclust(data.dist, method="ward.D2")
wisc.pr.hclust.clusters <- cutree(wisc.pr.hclust, k=2)
table(wisc.pr.hclust.clusters, diagnosis)
```


```{r}
wisc.km <- kmeans(wisc.data, centers= 2, nstart= 2)
```

```{r}
table(wisc.km$cluster, diagnosis)
table(wisc.hclust.clusters, diagnosis)
```
> Q15. How well does the newly created model with four clusters separate out the two diagnoses?
This model is good at not giving false positives, but there are still a decent amount of false negatives, which is something we would like to avoid.

> Q16. How well do the k-means and hierarchical clustering models you created in previous sections (i.e. before PCA) do in terms of separating the diagnoses? Again, use the table() function to compare the output of each model (wisc.km$cluster and wisc.hclust.clusters) with the vector containing the actual 
I would say that the hierarchical clustering method did a little better than the k-means, as there were a similar amount of false positives detected in both, but the hclust method had far fewer false negatives, though still a lot.

```{r}
url <- "https://tinyurl.com/new-samples-CSV"
new <- read.csv(url)
npc <- predict(wisc.pr, newdata=new)
npc
```

```{r}
plot(wisc.pr$x[,1:2], col=g)
points(npc[,1], npc[,2], col="blue", pch=16, cex=3)
text(npc[,1], npc[,2], c(1,2), col="white")
```
> Q18. Which of these new patients should we prioritize for follow up based on your results?
We should prioritize patient 1, as they are in the region of the plot with the malignant results, so it is more likely that their tumor is malignant than patient 2.
